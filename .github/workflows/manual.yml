
  on:
    push:
      branches:
        - master
  
  jobs:
    build_images:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout code
          uses: actions/checkout@v2
  
        - name: Set image tag with timestamp
          id: set_tag
          run: echo "IMAGE_TAG=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV
  
        - name: Login to Docker Hub
          env:
            DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
          run: echo $DOCKER_TOKEN | docker login --username cdapdev2020 --password-stdin

        #- name:  Build Docker image of node-app-server
          #run:  docker build -t cdapdev2020/node-server-app:${ env.IMAGE_TAG }} .
          #run:  echo "::set-output name=node_image_name::cdapdev2020/node-server-app:${ env.IMAGE_TAG }}"

        - name: Build Docker image MySql databse
          run: | 
                cd db
                docker build -t cdapdev2020/db-node-server-app:${{ env.IMAGE_TAG }} .
          #run: echo "::set-output name=db_image_name::cdapdev2020/db-node-server-app:${ env.IMAGE_TAG }}"
  
        - name: Push Docker images
          run: |  
                docker push cdapdev2020/db-node-server-app:${{ env.IMAGE_TAG }}

    deploy:

      runs-on: ubuntu-latest
      needs: [ build_images ]
      steps:
      - uses: actions/checkout@v4
      - name: Run Terraform
        run: |
            cd terraform 
            set -e 

            terraform init -input=false
            terraform apply -input=false -auto-approve
        env: 
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          TF_VAR_tag_id: ${{ needs.build.outputs.tag_id }}


